"use strict";(self.webpackChunknight_shark_docs=self.webpackChunknight_shark_docs||[]).push([[53],{1109:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Installation","href":"/docs/intro","docId":"intro"},{"type":"category","label":"Tutorial - Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/tutorial-basics/ introduction","docId":"tutorial-basics/ introduction"},{"type":"link","label":"Pre-Built Functions","href":"/docs/tutorial-basics/pre-built-functions","docId":"tutorial-basics/pre-built-functions"},{"type":"link","label":"Defining Functions","href":"/docs/tutorial-basics/defining-functions","docId":"tutorial-basics/defining-functions"},{"type":"link","label":"Introducing Variables","href":"/docs/tutorial-basics/introducing-variables","docId":"tutorial-basics/introducing-variables"},{"type":"link","label":"Reading Areas","href":"/docs/tutorial-basics/read-areas","docId":"tutorial-basics/read-areas"},{"type":"link","label":"Clicking Buttons","href":"/docs/tutorial-basics/click-buttons","docId":"tutorial-basics/click-buttons"},{"type":"link","label":"Converting to Number","href":"/docs/tutorial-basics/converting-to-number","docId":"tutorial-basics/converting-to-number"},{"type":"link","label":"If-Else statement","href":"/docs/tutorial-basics/if-else-statement","docId":"tutorial-basics/if-else-statement"},{"type":"link","label":"Using Loop Constructs","href":"/docs/tutorial-basics/using-loop","docId":"tutorial-basics/using-loop"}],"href":"/docs/category/tutorial---basics"},{"type":"link","label":"Dynamic Scalper","href":"/docs/dynamic-scalper","docId":"dynamic-scalper"}]},"docs":{"dynamic-scalper":{"id":"dynamic-scalper","title":"Dynamic Scalper","description":"Dynamic Scalper is the most advanced and easy-to-customize trading strategy added by Nightshark. It uses 9 parameters where users can customize it based on their needs and create their own trading bot.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Installation","description":"In this article, we\'ll walk you through the process of setting up the NightShark desktop application on your Windows PC. Let\'s get started!","sidebar":"tutorialSidebar"},"tutorial-basics/ introduction":{"id":"tutorial-basics/ introduction","title":"Introduction","description":"Welcome to the NightShark Documentation! This guide aims to provide you with a comprehensive understanding of NightShark\'s features and functionalities. NightShark is a powerful tool for algo-trading, allowing you to automate complex trading strategies with ease. Whether you\'re a beginner or an experienced trader, this documentation will serve as your go-to resource for mastering NightShark\'s capabilities.","sidebar":"tutorialSidebar"},"tutorial-basics/click-buttons":{"id":"tutorial-basics/click-buttons","title":"Clicking Buttons","description":"The Click() function in NightShark is designed to simulate mouse clicks at specified points on your screen. This is particularly useful for interacting with UI elements in your trading platform. This section will explain the function in detail and provide examples for clarity.","sidebar":"tutorialSidebar"},"tutorial-basics/converting-to-number":{"id":"tutorial-basics/converting-to-number","title":"Converting to Number","description":"The toNumber() function in NightShark is essential for converting area values into numerical data. This conversion is crucial when you need to perform mathematical operations or comparisons on the data you\'ve collected. This section will elaborate on the function\'s importance, its usage, and provide examples for better understanding.","sidebar":"tutorialSidebar"},"tutorial-basics/defining-functions":{"id":"tutorial-basics/defining-functions","title":"Defining Functions","description":"Defining custom functions in NightShark is a powerful way to encapsulate specific actions or conditions, making your code more modular, reusable, and easier to manage. This section will guide you through the process of defining functions, step-by-step, with additional examples.","sidebar":"tutorialSidebar"},"tutorial-basics/if-else-statement":{"id":"tutorial-basics/if-else-statement","title":"If-Else statement","description":"If-else statements are a fundamental part of programming logic, and they\'re no less important in NightShark. These conditional statements allow you to execute different blocks of code based on whether a condition is true or false. This section will delve into the importance of using if-else statements in your NightShark scripts, how to implement them, and provide examples for better understanding.","sidebar":"tutorialSidebar"},"tutorial-basics/introducing-variables":{"id":"tutorial-basics/introducing-variables","title":"Introducing Variables","description":"In NightShark, variables serve as placeholders for storing data values, which can be used and manipulated throughout your script. This section will guide you through the process of declaring and using variables in NightShark, complete with examples.","sidebar":"tutorialSidebar"},"tutorial-basics/pre-built-functions":{"id":"tutorial-basics/pre-built-functions","title":"Pre-Built Functions","description":"NightShark offers a variety of pre-built functions to make your trading automation as seamless as possible. These functions are designed to perform specific tasks, reducing the amount of code you have to write. Here\'s a breakdown:","sidebar":"tutorialSidebar"},"tutorial-basics/read-areas":{"id":"tutorial-basics/read-areas","title":"Reading Areas","description":"The read_areas() function is a cornerstone of any trading script in NightShark. It reads the areas on the screen that you\'ve designated for tracking. This section will delve into the importance of this function, why it should be used in a loop, and provide examples for better understanding.","sidebar":"tutorialSidebar"},"tutorial-basics/using-loop":{"id":"tutorial-basics/using-loop","title":"Using Loop Constructs","description":"Looping is an essential control structure in NightShark that allows you to execute a block of code multiple times. This is particularly useful for tasks that require repetition, such as constantly reading areas or repeatedly clicking points. This section will discuss the importance of loops, the different types of loops you can use, and provide examples for better understanding.","sidebar":"tutorialSidebar"}}}')}}]);